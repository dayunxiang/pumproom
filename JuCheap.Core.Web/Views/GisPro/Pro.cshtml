@model IEnumerable<JuCheap.Core.Data.Entity.GisProEntity>
@{
    ViewData["Title"] = "Pro";
    Layout = "~/Views/Shared/_Layout_Content.cshtml";
}
@section styles
    {
    <link href="~/css/plugins/iCheck/custom.css" rel="stylesheet">
    <link href="~/css/plugins/chosen/chosen.css" rel="stylesheet">
    <link href="~/css/plugins/colorpicker/css/bootstrap-colorpicker.min.css" rel="stylesheet">
    <link href="~/css/plugins/cropper/cropper.min.css" rel="stylesheet">
    <link href="~/css/plugins/switchery/switchery.css" rel="stylesheet">
    <link href="~/css/plugins/jasny/jasny-bootstrap.min.css" rel="stylesheet">
    <link href="~/css/plugins/nouslider/jquery.nouislider.css" rel="stylesheet">
    <link href="~/css/plugins/datapicker/datepicker3.css" rel="stylesheet">
    <link href="~/css/plugins/ionRangeSlider/ion.rangeSlider.css" rel="stylesheet">
    <link href="~/css/plugins/ionRangeSlider/ion.rangeSlider.skinFlat.css" rel="stylesheet">
    <link href="~/css/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css" rel="stylesheet">
    <link href="~/css/plugins/clockpicker/clockpicker.css" rel="stylesheet">
    <link href="~/css/animate.css" rel="stylesheet">
}


<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <style type="text/css">
        span {
            font-weight: bold;
            color: #ff9955;
        }

        .iw_poi_title {
            color: white;
            font-size: 14px;
            font-weight: bold;
            overflow: hidden;
            padding-right: 13px;
            white-space: nowrap;
        }

        .iw_poi_content {
            font: 12px arial,sans-serif;
            overflow: visible;
            padding-top: 4px;
            white-space: nowrap;
            word-wrap: break-word;
        }

        .OverlayInsideDiv {
            position: absolute;
            height: 130px;
            width: 140px;
            overflow: hidden;
            opacity: 0.9;
        }

            .OverlayInsideDiv p {
                margin: 5px 0 0;
                padding: 0;
                color: #3B9B8B;
            }

                .OverlayInsideDiv p span {
                    color: #8B8E93;
                }
    </style>

</head>
<div style="margin-bottom:5px;">

    <div class="input-group clockpicker col-sm-12" data-autoclose="true">
        <input class="form-control" id="txtWords" placeholder="搜索地区" value="" type="text" />
        <span class="input-group-btn">
            <button id="btnSearch" class="btn btn btn-primary" type="button" onclick="searchMap()"> <i class="fa fa-search"></i> 搜索</button>
        </span>
        @*<button id="btnSearch" class="btn btn-primary" onclick="searchMap();">
            <i class="fa fa-search"></i>搜索地图
        </button>*@
        </div>

    <div class="input-group clockpicker col-sm-12" data-autoclose="true">


        <input id="alarm" disabled type="text" value="报警信息:目前正常" class="form-control" />

        <span class="input-group">
            <select data-placeholder="请选择泵房..." class="chosen-select" style="width:350px;" tabindex="2" id="select">
                <option value="">请选择泵房</option>
                @{
                foreach (var item in Model)
                {
                    <option value=@item.坐标 hassubinfo="true">@item.站点名称</option>

            }
                }
                @*<option value="110000" hassubinfo="true">北京</option>
                <option value="120000" hassubinfo="true">天津</option>
                <option value="130000" hassubinfo="true">河北省</option>
                <option value="140000" hassubinfo="true">山西省</option>
                <option value="150000" hassubinfo="true">内蒙古自治区</option>
                <option value="210000" hassubinfo="true">辽宁省</option>
                <option value="220000" hassubinfo="true">吉林省</option>
                <option value="230000" hassubinfo="true">黑龙江省</option>
                <option value="310000" hassubinfo="true">上海</option>
                <option value="320000" hassubinfo="true">江苏省</option>
                <option value="330000" hassubinfo="true">浙江省</option>
                <option value="340000" hassubinfo="true">安徽省</option>
                <option value="350000" hassubinfo="true">福建省</option>
                <option value="360000" hassubinfo="true">江西省</option>
                <option value="370000" hassubinfo="true">山东省</option>
                <option value="410000" hassubinfo="true">河南省</option>
                <option value="420000" hassubinfo="true">湖北省</option>
                <option value="430000" hassubinfo="true">湖南省</option>
                <option value="440000" hassubinfo="true">广东省</option>
                <option value="450000" hassubinfo="true">广西壮族自治区</option>
                <option value="460000" hassubinfo="true">海南省</option>
                <option value="500000" hassubinfo="true">重庆</option>
                <option value="510000" hassubinfo="true">四川省</option>
                <option value="520000" hassubinfo="true">贵州省</option>
                <option value="530000" hassubinfo="true">云南省</option>
                <option value="540000" hassubinfo="true">西藏自治区</option>
                <option value="610000" hassubinfo="true">陕西省</option>
                <option value="620000" hassubinfo="true">甘肃省</option>
                <option value="630000" hassubinfo="true">青海省</option>
                <option value="640000" hassubinfo="true">宁夏回族自治区</option>
                <option value="650000" hassubinfo="true">新疆维吾尔自治区</option>
                <option value="710000" hassubinfo="true">台湾省</option>
                <option value="810000" hassubinfo="true">香港特别行政区</option>
                <option value="820000" hassubinfo="true">澳门特别行政区</option>
                <option value="990000" hassubinfo="true">海外</option>*@
            </select>

            <button id="" class="btn btn-warning" type="button" onclick="ceshidown()"> <i class="fa fa-map-pin"></i> 定位</button>
            <button class="btn btn-warning" type="button" onclick="OnAlarm()"> 报警弹框</button>
            <label>经度</label>
            <span id="jing_du"></span>
            <label>纬度</label>
            <span id="wei_du"></span>


        </span>
        <audio id="bgWarn" controls="controls" preload="none" class="hidden">
            @*<source src="song.ogg" type="audio/ogg" />*@
            <source src="~/video/read.mp3" type="audio/mpeg" />
           
        </audio>



        @*@{
            foreach(var item in Model)
            {
                <h1>@item.站点名称 </h1>

            }
        }*@

    </div>
       
        





        @*<button class="btn btn-primary" onclick="add_overlay();">添加覆盖物</button>
            <button class="btn btn-primary" onclick="clearOverlay();">去除覆盖物</button>
            <button class="btn btn-primary" onclick="refresh();">刷新覆盖物</button>
            <button class="btn btn-primary" onclick="reload();">重新加载</button>
            <button class="btn btn-primary" onclick="sw();">开启实时刷新</button>
            <button class="btn btn-primary" onclick="sw1();">关闭实时刷新</button>*@
    </div>
    <div style="width:inherit;height:inherit;border:#ccc solid 1px;" id="mapContent"></div>

    @section scripts
        {

        <script src="~/js/plugins/chosen/chosen.jquery.js"></script>
        <script src="~/js/plugins/jsKnob/jquery.knob.js"></script>
        <script src="~/js/plugins/jasny/jasny-bootstrap.min.js"></script>
        <script src="~/js/plugins/datapicker/bootstrap-datepicker.js"></script>
        <script src="~/js/plugins/prettyfile/bootstrap-prettyfile.js"></script>
        <script src="~/js/plugins/nouslider/jquery.nouislider.min.js"></script>
        <script src="~/js/plugins/switchery/switchery.js"></script>
        <script src="~/js/plugins/ionRangeSlider/ion.rangeSlider.min.js"></script>
        <script src="~/js/plugins/iCheck/icheck.min.js"></script>
        <script src="~/js/plugins/metisMenu/jquery.metisMenu.js"></script>
        <script src="~/js/plugins/colorpicker/bootstrap-colorpicker.min.js"></script>
        <script src="~/js/plugins/clockpicker/clockpicker.js"></script>
        <script src="~/js/plugins/cropper/cropper.min.js"></script>
        <script src="~/js/page/form-advanced.js"></script>



        <script type="text/javascript" src="~/Gis/jquery-3.2.1.min.js"></script>
            <script src="~/js/jquery.js"></script>
        <script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=iWdBygRQc81gKvR2HuRVNtEbSR3Fpm0Z"></script>
        <script src="~/Gis/base-BaiduMap1.js" charset="UTF-8"></script>

        <script type="text/javascript">
            //标注点数组
           
                
            var a = 1;
            var flag = 0;
            var map;
            var flag1 = 0;
            var audio = document.getElementById("bgWarn");
           function mainmap(var1) {
                var pp0 = var1.split("|")[0];
                var pp1 = var1.split("|")[1];
               map = BaiduMapObj.init("mapContent", pp0, pp1, 19);//创建和初始化地图
               map.addEventListener("click", function (e) {
                   var jing_du_value = e.point.lng;
                   var wei_du_value = e.point.lat;
                   //alert(e.point.lng + "," + e.point.lat);
                   var jing_du = document.getElementById("jing_du");
                   var wei_du = document.getElementById("wei_du");
                   jing_du.innerHTML = jing_du_value;
                   wei_du.innerHTML = wei_du_value;
               });
                return map;
            }
           //var map= mainmap('114.011086|22.601413');
               
                function searchMap() {
                    //重新初始化了一个map。
                    //BaiduMapObj.searchMap("mapContent", "txtWords");

                    var area = document.getElementById("txtWords").value; //得到地区
                    //alert(area);
                    //map.setSearchCompleteCallback(function (rs) {
                    //    if (ls.getStatus() == BMAP_STATUS_SUCCESS) {
                    //        var poi = rs.getPoi(0);
                    //        if (poi) {
                    //            //BaiduMapObj.init(id, poi.point.lng, poi.point.lat);
                    //            alert("ok");
                    //            var point = poi.point.lng + "|" + poi.point.lat;
                    //            mainmap(point);

                    //        }
                    //    }
                    //});
                    //map.search(area);
                    var ls = new BMap.LocalSearch(map);
                    ls.setSearchCompleteCallback(function (rs) {
                        if (ls.getStatus() == BMAP_STATUS_SUCCESS) {
                            var poi = rs.getPoi(0);
                            if (poi) {
                                //BaiduMapObj.init(id, poi.point.lng, poi.point.lat);
                                //alert("ok");
                               var point = poi.point.lng + "|" + poi.point.lat;
                                mainmap(point);

                            }
                        }
                    });
                    ls.search(area);
                   
                }
                function add_overlay() {
                    //在这里进行ajax通信获取markerarr，将数据库中的数据转换为json。建立一个和mark类似的表。
                    //直接在这里写，然后将添加覆盖物放在里面。
                    $.ajax({
                        url: "/GisPro/GetMarkerArr",  //ajax请求地址
                        type: "POST",//请求方式 "POST" 或 "GET"， 默认为 "GET"。注意：其它 HTTP 请求方法，如 PUT 和 DELETE 也可以使用，但仅部分浏览器支持。
                        dataType: "json",    //根据返回数据类型可以有这些类型可选：xml html script json jsonp text
                        //发送到服务器的数据，可以直接传对象{a:0,b:1}，如果是get请求会自动拼接到url后面，如：&a=0&b=1
                        //如果为数组，jQuery 将自动为不同值对应同一个名称。如 {foo:["bar1", "bar2"]} 转换为 "&foo=bar1&foo=bar2"。
                        data: { id: "ok" },
                        success:
                            function (result) {

                                if (!result.IsSuccess) {
                                    //alert("ok");
                                    //alert("ok");
                                    //alert(result.json);
                                    //var markerArr = result.json;
                                    //还要将key的双信号去掉,看来必须把这个双引号去掉

                                    //var str = result.json.replace(/"(\w+)"(\s*:\s*)/g, "$1$2");
                                    //var res = JSON.parse(str);
                                    //var str = [
                                    //    { id: 3, title: "紫衡技术", elecname: "电耗：", electricity: "11kwh", watername: "水量：", water: "1吨", airname: "排放量：", air: "0m³", alarmname: "报警次数：",alarm: "2次", point: "114.011944|22.602072", isOnline: 0 },
                                    //    { id: 6, title: "银谷科技", elecname: "电耗：", electricity: "16kwh", watername: "水量：", water: "2吨", airname: "排放量：", air: "30m³", alarmname: "报警次数：",alarm: "1次", point: "114.011086|22.601413", isOnline: 0 }
                                    //];
                                    //var str = result.json.replace(/"(\w+)"(\s*:\s*)/g, "$1$2");
                                    //var str = result.json.parseJSON();
                                    //result.json是字符串不是json的对象，然而对于json的对象来说，不管key有没有双引号都已可行的。所以说将字符串转换为json才是王道。
                                    var str = JSON.parse(result.json);

                                    //alert(str[0].坐标);
                                    //alert(str.length);
                                    BaiduMapObj.addMarker(map, str);//向地图中添加marker

                                    BaiduMapObj.addOverLay(map, str);//向地图中添加覆盖物

                                } else {
                                    alert("The result is failed!");
                                }
                            },

                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("系统繁忙,请稍候");
                        },
                        //请求完成后回调函数 (请求成功或失败之后均调用)。参数： XMLHttpRequest 对象和一个描述成功请求类型的字符串
                        complete: function (XMLHttpRequest, textStatus) {
                            //this 调用本次AJAX请求时传递的options参数
                        },
                        //一组数值的HTTP代码和函数对象，当响应时调用了相应的代码。例如，如果响应状态是404，将触发以下警报：
                        statusCode: {
                            404: function () {
                                alert('404，页面不存在');
                            }
                        }
                    });

                }
                function clearOverlay() {
                    map.clearOverlays();

                }
                function reload() {
                    window.location.reload();
                }

                function refresh() {
                    a = null;
                    map.clearOverlays();
                    add_overlay();
                    a = 1;
                }
                if (a == 1) {
                    var inter = setInterval("refresh()", 3000);
            }
            setInterval("getalarm()", 3000);

                function sw() {

                    inter = setInterval("refresh()", 3000);

                }
                function sw1() {

                    clearInterval(inter);
            }
            function OnAlarm() {
                if (flag1 == 0) {
                    flag1 = 1;

                }
                else {
                    flag1 = 0;

                }

            }

            function getalarm() {
                $.ajax({
                    url: "/GisPro/GetAlarm",  
                    type: "POST",
                    dataType: "json",   
                    data: {},
                    success:
                        function (result) {

                            if (!result.IsSuccess) {
                                //alert(result.message);
                                document.getElementById("alarm").value = "报警信息：" + result.message;
                                var s = "一切正常";
                                if (result.message != s) {
                                    audio.load();
                                    audio.play();
                                    if (flag1 == 0) {
                                        alert(result.message);

                                    }
                                   

                                }

                            } else {
                                alert("The result is failed!");
                            }
                        },

                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("系统繁忙,请稍候");
                    },
                    
                    complete: function (XMLHttpRequest, textStatus) {
                        
                    },
                    
                    statusCode: {
                        404: function () {
                            alert('404，页面不存在');
                        }
                    }
                });

            }

            function ceshidown() {
               // var options = $("#select option: selected"); //获取选中的项
                //alert(options.val()); //拿到选中项的
                var myselect = document.getElementById("select");
                var index = myselect.selectedIndex;
                var s = myselect.options[index].value;
                mainmap(s);
                //alert(s);


            }
                //function ceshi(var2) {
                //    var p0 = var2.split("|")[0];
                //    var p1 = var2.split("|")[1];
                //    //alert(po);
                //    //alert(x);
                //    mainmap()

                //}
            mainmap('120.128765|36.015969');
            
                       

            
            


        </script>
    }


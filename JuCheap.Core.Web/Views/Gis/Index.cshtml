
@{
    ViewData["Title"] = "Index";
}
@{
    Layout = "~/Views/Shared/_Layout_Content.cshtml";
}



@*百度地图api代码,自定义覆盖物的代码*@

@*<!DOCTYPE html>
    <html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
        <style type="text/css">
            body, html {
                width: 100%;
                height: 100%;
                margin: 0;
                font-family: "微软雅黑";
            }

            #allmap {
                width: 100%;
                height: 500px;
            }

            p {
                margin-left: 5px;
                font-size: 14px;
            }
        </style>
        <script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=iWdBygRQc81gKvR2HuRVNtEbSR3Fpm0Z"></script>
        <title>添加自定义覆盖物</title>
    </head>
    <body>

        <div style="width:inherit;height:inherit;border:#ccc solid 1px;" id="allmap"></div>
    </body>
    </html>
    <script type="text/javascript">
        // 百度地图API功能
        var mp = new BMap.Map("allmap");
        mp.centerAndZoom(new BMap.Point(116.3964,39.9093), 15);
        mp.enableScrollWheelZoom();
        // 复杂的自定义覆盖物
        function ComplexCustomOverlay(point, text, mouseoverText){
          this._point = point;
          this._text = text;
          this._overText = mouseoverText;
        }
        ComplexCustomOverlay.prototype = new BMap.Overlay();
        ComplexCustomOverlay.prototype.initialize = function(map){
          this._map = map;
          var div = this._div = document.createElement("div");
          div.style.position = "absolute";
          div.style.zIndex = BMap.Overlay.getZIndex(this._point.lat);
          div.style.backgroundColor = "#EE5D5B";
          div.style.border = "1px solid #BC3B3A";
          div.style.color = "white";
          div.style.height = "18px";
          div.style.padding = "2px";
          div.style.lineHeight = "18px";
          div.style.whiteSpace = "nowrap";
          div.style.MozUserSelect = "none";
          div.style.fontSize = "12px"
          var span = this._span = document.createElement("span");
          div.appendChild(span);
          span.appendChild(document.createTextNode(this._text));
          var that = this;

          var arrow = this._arrow = document.createElement("div");
          arrow.style.background = "url(http://map.baidu.com/fwmap/upload/r/map/fwmap/static/house/images/label.png) no-repeat";
          arrow.style.position = "absolute";
          arrow.style.width = "11px";
          arrow.style.height = "10px";
          arrow.style.top = "22px";
          arrow.style.left = "10px";
          arrow.style.overflow = "hidden";
          div.appendChild(arrow);
            //鼠标放在上边的时候：这里进行ajax进行获取状态列表
          div.onmouseover = function(){
            this.style.backgroundColor = "#6BADCA";
            this.style.borderColor = "#0000ff";
            this.getElementsByTagName("span")[0].innerHTML = that._overText;
            arrow.style.backgroundPosition = "0px -20px";
          }
           //鼠标离开的时候
          div.onmouseout = function(){
            this.style.backgroundColor = "#EE5D5B";
            this.style.borderColor = "#BC3B3A";
            this.getElementsByTagName("span")[0].innerHTML = that._text;
            arrow.style.backgroundPosition = "0px 0px";
          }

          mp.getPanes().labelPane.appendChild(div);

          return div;
        }
        ComplexCustomOverlay.prototype.draw = function(){
          var map = this._map;
          var pixel = map.pointToOverlayPixel(this._point);
          this._div.style.left = pixel.x - parseInt(this._arrow.style.left) + "px";
          this._div.style.top  = pixel.y - 30 + "px";
        }
        var txt = "银湖海岸城", mouseoverTxt =parseInt(Math.random() * 1000,10) + "套" ;

        var myCompOverlay = new ComplexCustomOverlay(new BMap.Point(116.407845,39.914101), "银湖海岸城",mouseoverTxt);

        mp.addOverlay(myCompOverlay);

    </script>*@


@*博客覆盖物实现的代码，这个比较复杂*@


<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <style type="text/css">
        span {
            font-weight: bold;
            color: #ff9955;
        }

        .iw_poi_title {
            color: white;
            font-size: 14px;
            font-weight: bold;
            overflow: hidden;
            padding-right: 13px;
            white-space: nowrap;
        }

        .iw_poi_content {
            font: 12px arial,sans-serif;
            overflow: visible;
            padding-top: 4px;
            white-space: nowrap;
            word-wrap: break-word;
        }

        .OverlayInsideDiv {
            position: absolute;
            height: 140px;
            width: 130px;
            overflow: hidden;
            opacity: 0.9;
        }

            .OverlayInsideDiv p {
                margin: 5px 0 0;
                padding: 0;
                color: #3B9B8B;
            }

                .OverlayInsideDiv p span {
                    color: #8B8E93;
                }
    </style>

</head>


<div style="margin-bottom:5px;">
    <input class="form-control input-inline" id="txtWords" placeholder="搜索地区" value="" type="text" />
    <button id="btnSearch" class="btn btn-primary" onclick="searchMap();">
        <i class="fa fa-search"></i>搜索地图
    </button>
    <button class="btn btn-primary" onclick="add_overlay();">添加覆盖物</button>
    <button class="btn btn-primary" onclick="clearOverlay();">去除覆盖物</button>
    <button class="btn btn-primary" onclick="refresh();">刷新覆盖物</button>
    <button class="btn btn-primary" onclick="reload();">重新加载</button>
    <button class="btn btn-primary" onclick="sw();">开启实时刷新</button>
    <button class="btn btn-primary" onclick="sw1();">关闭实时刷新</button>
</div>
<!--百度地图容器-->
<div style="width:inherit;height:inherit;border:#ccc solid 1px;" id="mapContent"></div>
@section scripts
    {



    <script type="text/javascript" src="~/Gis/jquery-3.2.1.min.js"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=iWdBygRQc81gKvR2HuRVNtEbSR3Fpm0Z"></script>
    <script src="~/Gis/base-BaiduMap.js"></script>

    <script type="text/javascript">
        //标注点数组
        var a = 1;
        var flag = 0;
        //var markerArr = [
        //    {
        //        title: "紫衡技术", elecname: "电耗：", electricity: "11kwh", watername: "水量：", water: "1吨", airname: "排放量：", air: "0m³", alarmname: "报警次数：", alarm: "2次", point: "114.011944|22.602072", isOnline: 0
        //    },
        //    {
        //        title: "银谷科技", elecname: "电耗：", electricity: "16kwh", watername: "水量：", water: "2吨", airname: "排放量：", air: "30m³", alarmname: "报警次数：", alarm: "1次", point: "114.011086|22.601413", isOnline: 0
        //    }
        //];
        var map = BaiduMapObj.init("mapContent", 114.011944, 22.602072, 19);//创建和初始化地图

       
        function searchMap() {
            //重新初始化了一个map。
            BaiduMapObj.searchMap("mapContent", "txtWords");
            
        }

        function add_overlay() {
            //在这里进行ajax通信获取markerarr，将数据库中的数据转换为json。建立一个和mark类似的表。
            //直接在这里写，然后将添加覆盖物放在里面。
            $.ajax({
                url: "/Gis/GetMarkerArr",  //ajax请求地址
                type: "POST",//请求方式 "POST" 或 "GET"， 默认为 "GET"。注意：其它 HTTP 请求方法，如 PUT 和 DELETE 也可以使用，但仅部分浏览器支持。
                dataType: "json",    //根据返回数据类型可以有这些类型可选：xml html script json jsonp text
                //发送到服务器的数据，可以直接传对象{a:0,b:1}，如果是get请求会自动拼接到url后面，如：&a=0&b=1
                //如果为数组，jQuery 将自动为不同值对应同一个名称。如 {foo:["bar1", "bar2"]} 转换为 "&foo=bar1&foo=bar2"。
                data: { id: "ok" },
                success:
                    function (result) {

                        if (!result.IsSuccess) {
                            //alert("ok");
                            //alert("ok");
                            //alert(result.json);
                            //var markerArr = result.json;
                            //还要将key的双信号去掉,看来必须把这个双引号去掉

                            //var str = result.json.replace(/"(\w+)"(\s*:\s*)/g, "$1$2");
                            //var res = JSON.parse(str);
                            //var str = [
                            //    { id: 3, title: "紫衡技术", elecname: "电耗：", electricity: "11kwh", watername: "水量：", water: "1吨", airname: "排放量：", air: "0m³", alarmname: "报警次数：", alarm: "2次", point: "114.011944|22.602072", isOnline: 0 },
                            //    { id: 6, title: "银谷科技", elecname: "电耗：", electricity: "16kwh", watername: "水量：", water: "2吨", airname: "排放量：", air: "30m³", alarmname: "报警次数：", alarm: "1次", point: "114.011086|22.601413", isOnline: 0 }
                            //];
                            //var str = result.json.replace(/"(\w+)"(\s*:\s*)/g, "$1$2");
                            //var str = result.json.parseJSON();
                            //result.json是字符串不是json的对象，然而对于json的对象来说，不管key有没有双引号都已可行的。所以说将字符串转换为json才是王道。
                            var str = JSON.parse(result.json);
                            //alert(str.length);
                            BaiduMapObj.addMarker(map, str);//向地图中添加marker
                            BaiduMapObj.addOverLay(map, str);//向地图中添加覆盖物

                        } else {
                            alert("The result is failed!");
                        }
                    },

                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("系统繁忙,请稍候");
                },
                //请求完成后回调函数 (请求成功或失败之后均调用)。参数： XMLHttpRequest 对象和一个描述成功请求类型的字符串
                complete: function (XMLHttpRequest, textStatus) {
                    //this 调用本次AJAX请求时传递的options参数
                },
                //一组数值的HTTP代码和函数对象，当响应时调用了相应的代码。例如，如果响应状态是404，将触发以下警报：
                statusCode: {
                    404: function () {
                        alert('404，页面不存在');
                    }
                }
            });

        }
        function clearOverlay() {
            map.clearOverlays();

        }
        function reload() {
            window.location.reload();
        }

        function refresh() {
            a = null;
            map.clearOverlays();
            add_overlay();
            a = 1;
        }
        if (a == 1) {
            var inter = setInterval("refresh()", 3000);
        }

        function sw() {

            inter = setInterval("refresh()", 3000);

        }
        function sw1() {

            clearInterval(inter);
        }

    </script>
}





